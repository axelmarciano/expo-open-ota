# Default values for expo-open-ota.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1 # Do not use more than 1 replica if storageMode is set to local

image:
  repository: ghcr.io/axelmarciano/expo-open-ota
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
    # eks.amazonaws.com/role-arn: "arn:aws:iam::..."
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "expo-open-ota-sa"

secretName: "expo-open-ota-secrets" # If set, environment variables will be read from this secret, else they will be read from the values.yaml file or passed in via the helm command line
storageMode: "s3"
keysStorageType: "aws-secrets-manager"
useCloudfrontRedirect: "false"
useAWSAccessKeys: "false"
cacheMode: "redis"
useDashboard: "false"
useRedisTLS: "false"

environment:
  - name: "USE_DASHBOARD"
    key: "useDashboard"
    required: true
    computed: true
  - name: "ADMIN_PASSWORD"
    value: ""
    required:
      - key: "useDashboard"
        is: "true"
  - name: "CACHE_MODE"
    key: "cacheMode"
    required: true
    computed: true
  - name: "REDIS_HOST"
    value: ""
    required:
      - key: "cacheMode"
        is: "redis"
  - name: "REDIS_PORT"
    value: ""
    required:
      - key: "cacheMode"
        is: "redis"
  - name: "REDIS_USE_TLS"
    value: "true"
    required:
      - key: "cacheMode"
        is: "redis"
      - key: "useRedisTLS"
        is: "true"
  - name: "REDIS_PASSWORD"
    value: ""
    required:
      - key: "cacheMode"
        is: "redis"
  - name: "STORAGE_MODE"
    key: "storageMode"
    required: true
    computed: true
  - name: "AWS_ACCESS_KEY_ID"
    value: ""
    required:
      - key: "useAWSAccessKeys"
        is: "true"
  - name: "AWS_SECRET_ACCESS_KEY"
    value: ""
    required:
      - key: "useAWSAccessKeys"
        is: "true"
  - name: "AWS_REGION"
    value: ""
    required:
      - key: "storageMode"
        is: "s3"
  - name: "AWS_BASE_ENDPOINT"
    value: ""
    required: false
  - name: "S3_BUCKET_NAME"
    value: ""
    required:
      - key: "storageMode"
        is: "s3"
  - name: "LOCAL_BUCKET_BASE_PATH"
    value: ""
    required:
      - key: "storageMode"
        is: "local"
  - name: "CLOUDFRONT_DOMAIN"
    value: ""
    required:
      - key: "useCloudfrontRedirect"
        is: "true"
  - name: "CLOUDFRONT_KEY_PAIR_ID"
    value: ""
    required:
      - key: "useCloudfrontRedirect"
        is: "true"
  - name: "PRIVATE_CLOUDFRONT_KEY_PATH"
    value: ""
    required:
      - key: "useCloudfrontRedirect"
        is: "true"
      - key: "keysStorageType"
        is: "local"
  - name: "AWSSM_CLOUDFRONT_PRIVATE_KEY_SECRET_ID"
    value: ""
    required:
      - key: "useCloudfrontRedirect"
        is: "true"
      - key: "keysStorageType"
        is: "aws-secrets-manager"
  - name: "KEYS_STORAGE_TYPE"
    key: "keysStorageType"
    required: true
    computed: true
  - name: "AWSSM_EXPO_PUBLIC_KEY_SECRET_ID"
    value: ""
    required:
      - key: "keysStorageType"
        is: "aws-secrets-manager"
  - name: "AWSSM_EXPO_PRIVATE_KEY_SECRET_ID"
    value: ""
    required:
      - key: "keysStorageType"
        is: "aws-secrets-manager"
  - name: "PUBLIC_LOCAL_EXPO_KEY_PATH"
    value: ""
    required:
      - key: "keysStorageType"
        is: "local"
  - name: "PRIVATE_LOCAL_EXPO_KEY_PATH"
    value: ""
    required:
      - key: "keysStorageType"
        is: "local"
  - name: "PUBLIC_EXPO_KEY_B64"
    value: ""
    required:
      - key: "keysStorageType"
        is: "environment"
  - name: "PRIVATE_EXPO_KEY_B64"
    value: ""
    required:
      - key: "keysStorageType"
        is: "environment"
  - name: "PRIVATE_CLOUDFRONT_KEY_B64"
    value: ""
    required:
      - key: "keysStorageType"
        is: "environment"
  - name: "BASE_URL"
    value: ""
    required: true
  - name: "EXPO_ACCESS_TOKEN"
    value: ""
    required: true
  - name: "EXPO_APP_ID"
    value: ""
    required: true
  - name: "JWT_SECRET"
    value: ""
    required: true


podAnnotations: {}
    # prometheus.io/scrape: "true"
    # prometheus.io/path: "/metrics"
    # prometheus.io/port: "3000"

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: true
  className: ""
  annotations:
      # kubernetes.io/ingress.class: nginx
      # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      # nginx.ingress.kubernetes.io/proxy-body-size: 100m
      # nginx.ingress.kubernetes.io/ingress.allow-http: "false"
      # nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      # nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #  proxy_set_header True-Client-IP $remote_addr;
      # nginx.ingress.kubernetes.io/server-snippet: |
      # location ~* "^/metrics" {
      #        deny all;
      #        return 403;
      #  }
      # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
