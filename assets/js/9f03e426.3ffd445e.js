"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[422],{8091:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"deployment/testing","title":"Local testing","description":"If you want to test Expo Open OTA locally, you can use the provided docker-compose file to run the server locally","source":"@site/docs/deployment/testing.mdx","sourceDirName":"deployment","slug":"/deployment/testing","permalink":"/expo-open-ota/docs/deployment/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/deployment/testing.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docSidebar","previous":{"title":"Custom Deployment","permalink":"/expo-open-ota/docs/deployment/custom"},"next":{"title":"Environment variables","permalink":"/expo-open-ota/docs/environment"}}');var o=t(4848),i=t(8453);const r={sidebar_position:3},a="Local testing",l={},d=[{value:"Clone the repository",id:"clone-the-repository",level:2},{value:"Setup .env",id:"setup-env",level:2},{value:"Setup the dashboard (local)",id:"setup-the-dashboard-local",level:2},{value:"Run the server using docker-compose",id:"run-the-server-using-docker-compose",level:2},{value:"\ud83d\ude80 Running the Example App",id:"-running-the-example-app",level:2},{value:"Setup certificates",id:"setup-certificates",level:3},{value:"Build the Example App",id:"build-the-example-app",level:3},{value:"Configure the Expo Project",id:"configure-the-expo-project",level:3},{value:"Update app.json",id:"update-appjson",level:3},{value:"Android Setup",id:"android-setup",level:3},{value:"IOS",id:"ios",level:3},{value:"Testing OTA Updates",id:"testing-ota-updates",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"local-testing",children:"Local testing"})}),"\n",(0,o.jsxs)(n.p,{children:["If you want to test ",(0,o.jsx)(n.strong,{children:"Expo Open OTA"})," locally, you can use the provided docker-compose file to run the server locally\nand expose it on internet using reverse proxy like ngrok."]}),"\n",(0,o.jsx)(n.h2,{id:"clone-the-repository",children:"Clone the repository"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/axelmarciano/expo-open-ota\ncd expo-open-ota\n"})}),"\n",(0,o.jsx)(n.h2,{id:"setup-env",children:"Setup .env"}),"\n",(0,o.jsxs)(n.p,{children:["Setup ",(0,o.jsx)(n.a,{href:"/docs/environment",children:"environment variables"})," by creating a ",(0,o.jsx)(n.code,{children:".env"})," file in the root directory of the project."]}),"\n",(0,o.jsx)(n.h2,{id:"setup-the-dashboard-local",children:"Setup the dashboard (local)"}),"\n",(0,o.jsxs)(n.p,{children:["The dashboard isn\u2019t served at ",(0,o.jsx)(n.strong,{children:"/dashboard"})," when running locally. Start it in dev mode:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd apps/dashboard\nnpm install\nnpm run dev\n"})}),"\n",(0,o.jsx)(n.h2,{id:"run-the-server-using-docker-compose",children:"Run the server using docker-compose"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker-compose build\ndocker-compose up\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The server is now running on port ",(0,o.jsx)(n.strong,{children:"3000"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"-running-the-example-app",children:"\ud83d\ude80 Running the Example App"}),"\n",(0,o.jsx)(n.p,{children:"The example app is located in apps/example-app and is designed to help you test the update server locally."}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"\u2139\ufe0f The app must be run in release mode to properly test OTA behavior."})}),"\n",(0,o.jsx)(n.h3,{id:"setup-certificates",children:"Setup certificates"}),"\n",(0,o.jsx)(n.p,{children:"The signing certificates required for update validation are located in:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"apps/example-app/certs/certificate-dev.pem\napps/example-app/certs/public-key.pem\n"})}),"\n",(0,o.jsxs)(n.p,{children:["To enable update signature verification, you must configure these certificates in your server environment.\n",(0,o.jsx)(n.a,{href:"/docs/key-store#expo-signing-certificate",children:"Ref"})]}),"\n",(0,o.jsx)(n.h3,{id:"build-the-example-app",children:"Build the Example App"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"yarn prebuild_production\nOR\nyarn prebuild_staging\n"})}),"\n",(0,o.jsx)(n.h3,{id:"configure-the-expo-project",children:"Configure the Expo Project"}),"\n",(0,o.jsx)(n.p,{children:"Create an Expo project in your Expo dashboard with two branches:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"staging"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"production"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Each branch should have its own release channel. Then retrieve the Project ID from the Expo dashboard."}),"\n",(0,o.jsx)(n.h3,{id:"update-appjson",children:"Update app.json"}),"\n",(0,o.jsxs)(n.p,{children:["In apps/example-app/app.json, replace ",(0,o.jsx)(n.code,{children:"YOUR_PROJECT_ID"})," with your actual Expo project ID:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'"extra": {\n  "router": {\n    "origin": false\n  },\n  "eas": {\n    "projectId": "YOUR_PROJECT_ID"\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"android-setup",children:"Android Setup"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"yarn prebuild_production   # Prebuild the app with the 'production' config\ncd android\n./gradlew clean            # Clean previous builds\n./gradlew assembleRelease  # Build the release APK\n./gradlew installRelease   # Install the release APK on a connected device/emulator\n"})}),"\n",(0,o.jsx)(n.h3,{id:"ios",children:"IOS"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd ios\npod cache clean --all\npod install\n"})}),"\n",(0,o.jsx)(n.p,{children:"Then:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Open the iOS project in Xcode: open ios/*.xcworkspace"}),"\n",(0,o.jsx)(n.li,{children:"Go to: Product \u2192 Scheme \u2192 Edit Scheme"}),"\n",(0,o.jsx)(n.li,{children:"Under Run, set Build Configuration to Release"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"testing-ota-updates",children:"Testing OTA Updates"}),"\n",(0,o.jsx)(n.p,{children:"Once the app is installed in release mode, use the following commands to test OTA updates:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"yarn release_production   # Publish an update to the 'production' channel\nyarn release_staging      # Publish an update to the 'staging' channel\n"})}),"\n",(0,o.jsx)(n.p,{children:"The app will dynamically switch between channels at runtime if configured accordingly."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);