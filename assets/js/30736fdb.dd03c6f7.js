"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[786],{8838:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"advanced/prometheus","title":"Prometheus and Grafana","description":"Prometheus","source":"@site/docs/advanced/prometheus.mdx","sourceDirName":"advanced","slug":"/advanced/prometheus","permalink":"/expo-open-ota/docs/advanced/prometheus","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/advanced/prometheus.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"pagination_next":"cache"},"sidebar":"docSidebar","previous":{"title":"Republish","permalink":"/expo-open-ota/docs/eoas/republish"},"next":{"title":"Caching","permalink":"/expo-open-ota/docs/cache"}}');var r=t(4848),o=t(8453);t(7473);const s={sidebar_position:1,pagination_next:"cache"},l="Prometheus and Grafana",i={},c=[{value:"Prometheus",id:"prometheus",level:2},{value:"Grafana Dashboard",id:"grafana-dashboard",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"prometheus-and-grafana",children:"Prometheus and Grafana"})}),"\n",(0,r.jsx)(e.h2,{id:"prometheus",children:"Prometheus"}),"\n",(0,r.jsxs)(e.p,{children:["You can monitor the ",(0,r.jsx)(e.strong,{children:"Expo Open OTA"})," server using Prometheus. The server exposes metrics on the ",(0,r.jsx)(e.code,{children:"/metrics"})," endpoint.\nTo activate the Prometheus feature, set the ",(0,r.jsx)(e.code,{children:"PROMETHEUS_ENABLED"})," environment variable to ",(0,r.jsx)(e.code,{children:"true"}),".\nIf you are using our ",(0,r.jsx)(e.a,{href:"/docs/deployment/helm",children:"Helm chart"}),", the environment variable will be automatically set for you if ",(0,r.jsx)(e.code,{children:'prometheus.io/scrape: "true"'})," is present in ",(0,r.jsx)(e.code,{children:"podAnnotations"}),"."]}),"\n",(0,r.jsx)(e.h2,{id:"grafana-dashboard",children:"Grafana Dashboard"}),"\n",(0,r.jsx)(e.p,{children:"You can use the following dashboard to visualize the metrics exposed by the server:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "annotations": {\n    "list": [\n      {\n        "builtIn": 1,\n        "datasource": "-- Grafana --",\n        "enable": true,\n        "hide": true,\n        "iconColor": "rgba(0,211,255,1)",\n        "name": "Annotations & Alerts",\n        "target": {\n          "limit": 100,\n          "matchAny": false,\n          "tags": [],\n          "type": "dashboard"\n        },\n        "type": "dashboard"\n      }\n    ]\n  },\n  "editable": true,\n  "fiscalYearStartMonth": 0,\n  "graphTooltip": 0,\n  "id": 141,\n  "links": [],\n  "panels": [\n    {\n      "datasource": "$DS_PROM",\n      "fieldConfig": {\n        "defaults": {\n          "mappings": [],\n          "thresholds": {\n            "mode": "absolute",\n            "steps": [\n              {\n                "color": "green",\n                "value": null\n              },\n              {\n                "color": "red",\n                "value": 80\n              }\n            ]\n          },\n          "unit": "short"\n        },\n        "overrides": []\n      },\n      "gridPos": {\n        "h": 8,\n        "w": 8,\n        "x": 0,\n        "y": 0\n      },\n      "id": 1,\n      "options": {\n        "colorMode": "value",\n        "graphMode": "area",\n        "justifyMode": "auto",\n        "orientation": "horizontal",\n        "percentChangeColorMode": "standard",\n        "reduceOptions": {\n          "calcs": [\n            "last"\n          ],\n          "fields": "",\n          "values": false\n        },\n        "showPercentChange": false,\n        "textMode": "auto",\n        "wideLayout": true\n      },\n      "pluginVersion": "11.5.1",\n      "targets": [\n        {\n          "expr": "count(count by (clientId) (active_users_total{platform=~\\"$platform\\", runtime=~\\"$runtime\\", branch=~\\"$branch\\", update=~\\"$update\\"}))",\n          "legendFormat": "Total Unique Active Users",\n          "refId": "A"\n        }\n      ],\n      "title": "\ud83d\udfe2 Total Unique Active Users (24h)",\n      "type": "stat"\n    },\n    {\n      "datasource": "$DS_PROM",\n      "fieldConfig": {\n        "defaults": {\n          "color": {\n            "mode": "palette-classic"\n          },\n          "custom": {\n            "axisBorderShow": false,\n            "axisCenteredZero": false,\n            "axisColorMode": "text",\n            "axisLabel": "",\n            "axisPlacement": "auto",\n            "barAlignment": 0,\n            "barWidthFactor": 0.6,\n            "drawStyle": "line",\n            "fillOpacity": 0,\n            "gradientMode": "none",\n            "hideFrom": {\n              "legend": false,\n              "tooltip": false,\n              "viz": false\n            },\n            "insertNulls": false,\n            "lineInterpolation": "linear",\n            "lineWidth": 1,\n            "pointSize": 5,\n            "scaleDistribution": {\n              "type": "linear"\n            },\n            "showPoints": "auto",\n            "spanNulls": false,\n            "stacking": {\n              "group": "A",\n              "mode": "none"\n            },\n            "thresholdsStyle": {\n              "mode": "off"\n            }\n          },\n          "mappings": [],\n          "thresholds": {\n            "mode": "absolute",\n            "steps": [\n              {\n                "color": "green",\n                "value": null\n              },\n              {\n                "color": "red",\n                "value": 80\n              }\n            ]\n          },\n          "unit": "none"\n        },\n        "overrides": []\n      },\n      "gridPos": {\n        "h": 8,\n        "w": 8,\n        "x": 8,\n        "y": 0\n      },\n      "id": 2,\n      "options": {\n        "legend": {\n          "calcs": [],\n          "displayMode": "list",\n          "placement": "bottom",\n          "showLegend": true\n        },\n        "tooltip": {\n          "hideZeros": false,\n          "mode": "single",\n          "sort": "none"\n        }\n      },\n      "pluginVersion": "11.5.1",\n      "targets": [\n        {\n          "expr": "count(count by (clientId, platform) (active_users_total{platform=~\\"$platform\\", runtime=~\\"$runtime\\", branch=~\\"$branch\\", update=~\\"$update\\"})) by (platform)",\n          "legendFormat": "{{platform}}",\n          "refId": "A"\n        }\n      ],\n      "title": "\ud83d\udcca Unique Active Users by Platform",\n      "type": "timeseries"\n    },\n    {\n      "datasource": "$DS_PROM",\n      "fieldConfig": {\n        "defaults": {\n          "color": {\n            "mode": "palette-classic"\n          },\n          "custom": {\n            "axisBorderShow": false,\n            "axisCenteredZero": false,\n            "axisColorMode": "text",\n            "axisLabel": "",\n            "axisPlacement": "auto",\n            "barAlignment": 0,\n            "barWidthFactor": 0.6,\n            "drawStyle": "line",\n            "fillOpacity": 0,\n            "gradientMode": "none",\n            "hideFrom": {\n              "legend": false,\n              "tooltip": false,\n              "viz": false\n            },\n            "insertNulls": false,\n            "lineInterpolation": "linear",\n            "lineWidth": 1,\n            "pointSize": 5,\n            "scaleDistribution": {\n              "type": "linear"\n            },\n            "showPoints": "auto",\n            "spanNulls": false,\n            "stacking": {\n              "group": "A",\n              "mode": "none"\n            },\n            "thresholdsStyle": {\n              "mode": "off"\n            }\n          },\n          "mappings": [],\n          "thresholds": {\n            "mode": "absolute",\n            "steps": [\n              {\n                "color": "green",\n                "value": null\n              },\n              {\n                "color": "red",\n                "value": 80\n              }\n            ]\n          },\n          "unit": "short"\n        },\n        "overrides": []\n      },\n      "gridPos": {\n        "h": 8,\n        "w": 8,\n        "x": 16,\n        "y": 0\n      },\n      "id": 3,\n      "options": {\n        "legend": {\n          "calcs": [],\n          "displayMode": "table",\n          "placement": "bottom",\n          "showLegend": true\n        },\n        "tooltip": {\n          "hideZeros": false,\n          "mode": "single",\n          "sort": "none"\n        }\n      },\n      "pluginVersion": "11.5.1",\n      "targets": [\n        {\n          "expr": "sum(update_downloads_total{platform=~\\"$platform\\", runtime=~\\"$runtime\\", branch=~\\"$branch\\", update=~\\"$update\\"}) by (update)",\n          "legendFormat": "{{update}}",\n          "refId": "A"\n        }\n      ],\n      "title": "\u2b07\ufe0f Total Update Downloads by Update",\n      "type": "timeseries"\n    },\n    {\n      "datasource": "$DS_PROM",\n      "fieldConfig": {\n        "defaults": {\n          "color": {\n            "mode": "palette-classic"\n          },\n          "custom": {\n            "axisBorderShow": false,\n            "axisCenteredZero": false,\n            "axisColorMode": "text",\n            "axisLabel": "",\n            "axisPlacement": "auto",\n            "barAlignment": 0,\n            "barWidthFactor": 0.6,\n            "drawStyle": "line",\n            "fillOpacity": 0,\n            "gradientMode": "none",\n            "hideFrom": {\n              "legend": false,\n              "tooltip": false,\n              "viz": false\n            },\n            "insertNulls": false,\n            "lineInterpolation": "linear",\n            "lineWidth": 1,\n            "pointSize": 5,\n            "scaleDistribution": {\n              "type": "linear"\n            },\n            "showPoints": "auto",\n            "spanNulls": false,\n            "stacking": {\n              "group": "A",\n              "mode": "none"\n            },\n            "thresholdsStyle": {\n              "mode": "off"\n            }\n          },\n          "mappings": [],\n          "thresholds": {\n            "mode": "absolute",\n            "steps": [\n              {\n                "color": "green",\n                "value": null\n              },\n              {\n                "color": "red",\n                "value": 80\n              }\n            ]\n          },\n          "unit": "short"\n        },\n        "overrides": []\n      },\n      "gridPos": {\n        "h": 12,\n        "w": 24,\n        "x": 0,\n        "y": 8\n      },\n      "id": 4,\n      "options": {\n        "legend": {\n          "calcs": [],\n          "displayMode": "list",\n          "placement": "bottom",\n          "showLegend": true\n        },\n        "tooltip": {\n          "hideZeros": false,\n          "mode": "single",\n          "sort": "none"\n        }\n      },\n      "pluginVersion": "11.5.1",\n      "targets": [\n        {\n          "editorMode": "code",\n          "expr": "sum by (updateType) (rate(update_downloads_total{platform=~\\"$platform|.*\\", runtime=~\\"$runtime|.*\\", branch=~\\"$branch|.*\\", update=~\\"$update|.*\\", updateType=~\\"$updateType|.*\\"}[1m]))",\n          "legendFormat": "{{updateType}}",\n          "range": true,\n          "refId": "A"\n        }\n      ],\n      "title": "\u26a1 Update Downloads Rate Over Time by Type",\n      "type": "timeseries"\n    }\n  ],\n  "preload": false,\n  "refresh": "5s",\n  "schemaVersion": 1,\n  "tags": [\n    "oss",\n    "metrics",\n    "ota-server"\n  ],\n  "templating": {\n    "list": [\n      {\n        "current": {\n          "text": "All",\n          "value": "$__all"\n        },\n        "includeAll": true,\n        "label": "Data Source",\n        "name": "DS_PROM",\n        "options": [],\n        "query": "prometheus",\n        "refresh": 1,\n        "type": "datasource"\n      },\n      {\n        "allValue": ".*",\n        "current": {\n          "text": "All",\n          "value": "$__all"\n        },\n        "includeAll": true,\n        "label": "Platform",\n        "name": "platform",\n        "options": [],\n        "query": "label_values(active_users_total, platform)",\n        "refresh": 1,\n        "type": "query"\n      },\n      {\n        "allValue": ".*",\n        "current": {\n          "text": "All",\n          "value": "$__all"\n        },\n        "includeAll": true,\n        "label": "Runtime",\n        "name": "runtime",\n        "options": [],\n        "query": "label_values(active_users_total, runtime)",\n        "refresh": 1,\n        "type": "query"\n      },\n      {\n        "allValue": ".*",\n        "current": {\n          "text": "All",\n          "value": "$__all"\n        },\n        "includeAll": true,\n        "label": "Branch",\n        "name": "branch",\n        "options": [],\n        "query": "label_values(active_users_total, branch)",\n        "refresh": 1,\n        "type": "query"\n      },\n      {\n        "allValue": ".*",\n        "current": {\n          "text": "All",\n          "value": "$__all"\n        },\n        "includeAll": true,\n        "label": "Update",\n        "name": "update",\n        "options": [],\n        "query": "label_values(active_users_total, update)",\n        "refresh": 1,\n        "type": "query"\n      }\n    ]\n  },\n  "time": {\n    "from": "now-15m",\n    "to": "now"\n  },\n  "timepicker": {},\n  "timezone": "",\n  "title": "\ud83d\ude80 OTA Server Ultimate Metrics Dashboard",\n  "uid": "ota-metrics-dashboard",\n  "version": 1,\n  "weekStart": ""\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},7473:(n,e,t)=>{t.d(e,{A:()=>$});var a=t(6540),r=t(4164),o=t(3751),s=t(6289),l=t(797);const i=["zero","one","two","few","many","other"];function c(n){return i.filter((e=>n.includes(e)))}const d={locale:"en",pluralForms:c(["one","other"]),select:n=>1===n?"one":"other"};function u(){const{i18n:{currentLocale:n}}=(0,l.A)();return(0,a.useMemo)((()=>{try{return function(n){const e=new Intl.PluralRules(n);return{locale:n,pluralForms:c(e.resolvedOptions().pluralCategories),select:n=>e.select(n)}}(n)}catch(e){return console.error(`Failed to use Intl.PluralRules for locale "${n}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${e.message}\n`),d}}),[n])}function p(){const n=u();return{selectMessage:(e,t)=>function(n,e,t){const a=n.split("|");if(1===a.length)return a[0];a.length>t.pluralForms.length&&console.error(`For locale=${t.locale}, a maximum of ${t.pluralForms.length} plural forms are expected (${t.pluralForms.join(",")}), but the message contains ${a.length}: ${n}`);const r=t.select(e),o=t.pluralForms.indexOf(r);return a[Math.min(o,a.length-1)]}(t,e,n)}}var h=t(2887),m=t(539),f=t(9303);const g={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var x=t(4848);function b(n){let{href:e,children:t}=n;return(0,x.jsx)(s.A,{href:e,className:(0,r.A)("card padding--lg",g.cardContainer),children:t})}function y(n){let{href:e,icon:t,title:a,description:o}=n;return(0,x.jsxs)(b,{href:e,children:[(0,x.jsxs)(f.A,{as:"h2",className:(0,r.A)("text--truncate",g.cardTitle),title:a,children:[t," ",a]}),o&&(0,x.jsx)("p",{className:(0,r.A)("text--truncate",g.cardDescription),title:o,children:o})]})}function v(n){let{item:e}=n;const t=(0,o.Nr)(e),a=function(){const{selectMessage:n}=p();return e=>n(e,(0,m.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:e}))}();return t?(0,x.jsx)(y,{href:t,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:e.description??a(e.items.length)}):null}function _(n){let{item:e}=n;const t=(0,h.A)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,o.cC)(e.docId??void 0);return(0,x.jsx)(y,{href:e.href,icon:t,title:e.label,description:e.description??a?.description})}function w(n){let{item:e}=n;switch(e.type){case"link":return(0,x.jsx)(_,{item:e});case"category":return(0,x.jsx)(v,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}function A(n){let{className:e}=n;const t=(0,o.$S)();return(0,x.jsx)($,{items:t.items,className:e})}function $(n){const{items:e,className:t}=n;if(!e)return(0,x.jsx)(A,{...n});const a=(0,o.d1)(e);return(0,x.jsx)("section",{className:(0,r.A)("row",t),children:a.map(((n,e)=>(0,x.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,x.jsx)(w,{item:n})},e)))})}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>l});var a=t(6540);const r={},o=a.createContext(r);function s(n){const e=a.useContext(o);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),a.createElement(o.Provider,{value:e},n.children)}}}]);